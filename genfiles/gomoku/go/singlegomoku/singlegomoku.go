// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package singlegomoku

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// SingleGomokuABI is the input ABI used to generate the binding from.
const SingleGomokuABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"_stateProof\",\"type\":\"bytes\"}],\"name\":\"intendSettle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_action\",\"type\":\"bytes\"}],\"name\":\"applyAction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSeqNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSettleFinalizedTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActionDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_query\",\"type\":\"bytes\"}],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeOnActionTimeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_players\",\"type\":\"address[]\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_timeout\",\"type\":\"uint256\"},{\"name\":\"_minStoneOffchain\",\"type\":\"uint8\"},{\"name\":\"_maxStoneOnchain\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seq\",\"type\":\"uint256\"}],\"name\":\"IntendSettle\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"name\":\"_query\",\"type\":\"bytes\"}],\"name\":\"getOutcome\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"uint256\"}],\"name\":\"getState\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// SingleGomokuBin is the compiled bytecode used for deploying new contracts.
var SingleGomokuBin = "0x60806040523480156200001157600080fd5b5060405162002ae738038062002ae7833981018060405260a08110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b828101905060208101848111156200006757600080fd5b81518560208202830111640100000000821117156200008557600080fd5b5050929190602001805190602001909291908051906020019092919080519060200190929190805190602001909291905050508484848282828160008001819055508260006001019080519060200190620000e29291906200022b565b50806000600301819055506000806002018190555060008060050160006101000a81548160ff021916908360038111156200011957fe5b021790555050505050505060028551146200019c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f696e76616c6964206e756d626572206f6620706c61796572730000000000000081525060200191505060405180910390fd5b81600760046101000a81548160ff021916908360ff16021790555080600760056101000a81548160ff021916908360ff16021790555060e36040519080825280601f01601f191660200182016040528015620002075781602001600182028038833980820191505090505b50600690805190602001906200021f929190620002ba565b505050505050620003af565b828054828255906000526020600020908101928215620002a7579160200282015b82811115620002a65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200024c565b5b509050620002b6919062000341565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002fd57805160ff19168380011785556200032e565b828001600101855582156200032e579182015b828111156200032d57825182559160200191906001019062000310565b5b5090506200033d919062000387565b5090565b6200038491905b808211156200038057600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010162000348565b5090565b90565b620003ac91905b80821115620003a85760008160009055506001016200038e565b5090565b90565b61272880620003bf6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b71ca01f11610066578063b71ca01f14610286578063bbc35280146102a4578063bcdbda94146102c2578063ea4ba8eb14610353578063fa5e7ff5146103e45761009e565b8063130d33fe146100a35780631f2b71e51461011c57806344c9af28146101955780634e69d5601461023c5780636d15c45714610268575b600080fd5b61011a600480360360208110156100b957600080fd5b81019080803590602001906401000000008111156100d657600080fd5b8201836020820111156100e857600080fd5b8035906020019184600183028401116401000000008311171561010a57600080fd5b90919293919293905050506103ee565b005b6101936004803603602081101561013257600080fd5b810190808035906020019064010000000081111561014f57600080fd5b82018360208201111561016157600080fd5b8035906020019184600183028401116401000000008311171561018357600080fd5b9091929391929390505050610780565b005b6101c1600480360360208110156101ab57600080fd5b81019080803590602001909291905050506109a5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102015780820151818401526020810190506101e6565b50505050905090810190601f16801561022e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610244610c36565b6040518082600381111561025457fe5b60ff16815260200191505060405180910390f35b610270610c4f565b6040518082815260200191505060405180910390f35b61028e610c5b565b6040518082815260200191505060405180910390f35b6102ac610ca3565b6040518082815260200191505060405180910390f35b610339600480360360208110156102d857600080fd5b81019080803590602001906401000000008111156102f557600080fd5b82018360208201111561030757600080fd5b8035906020019184600183028401116401000000008311171561032957600080fd5b9091929391929390505050610d30565b604051808215151515815260200191505060405180910390f35b6103ca6004803603602081101561036957600080fd5b810190808035906020019064010000000081111561038657600080fd5b82018360208201111561039857600080fd5b803590602001918460018302840111640100000000831117156103ba57600080fd5b9091929391929390505050610d74565b604051808215151515815260200191505060405180910390f35b6103ec610eb7565b005b6003808111156103fa57fe5b600060050160009054906101000a900460ff16600381111561041857fe5b141561048c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6170702073746174652069732066696e616c697a65640000000000000000000081525060200191505060405180910390fd5b6104946125fb565b6104e183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610f5d565b90506104f5816000015182602001516110d4565b610567576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f696e76616c6964207369676e617475726500000000000000000000000000000081525060200191505060405180910390fd5b61056f612615565b61057c826000015161121e565b905060008001548160000151146105fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f6e6365206e6f74206d61746368000000000000000000000000000000000081525060200191505060405180910390fd5b806020015160006002015410610679576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f696e76616c69642073657175656e6365206e756d62657200000000000000000081525060200191505060405180910390fd5b80602001516000600201819055506001600060050160006101000a81548160ff021916908360038111156106a957fe5b021790555060006003015443016000600401819055506106cc816040015161130c565b61073e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f737461746520757064617465206661696c65640000000000000000000000000081525060200191505060405180910390fd5b7fce68db27527c6058059e8cbd1c6de0528ef1c417fe1c21c545919c7da3466d2a6000600201546040518082815260200191505060405180910390a150505050565b60038081111561078c57fe5b600060050160009054906101000a900460ff1660038111156107aa57fe5b141561081e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6170702073746174652069732066696e616c697a65640000000000000000000081525060200191505060405180910390fd5b6001600381111561082b57fe5b600060050160009054906101000a900460ff16600381111561084957fe5b14801561085a575060006004015443115b15610887576002600060050160006101000a81548160ff0219169083600381111561088157fe5b02179055505b6002600381111561089457fe5b600060050160009054906101000a900460ff1660038111156108b257fe5b14610925576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f617070206e6f7420696e20616374696f6e206d6f64650000000000000000000081525060200191505060405180910390fd5b600060020160008154809291906001019190505550600060030154430160006004018190555061099882828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506114fd565b6109a157600080fd5b5050565b6060600160028111156109b457fe5b821415610a9d57606060016040519080825280601f01601f1916602001820160405280156109f15781602001600182028038833980820191505090505b50905060066000815460018160011615610100020316600290048110610a1357fe5b815460011615610a325790600052602060002090602091828204019190065b9054901a7f01000000000000000000000000000000000000000000000000000000000000000281600081518110610a6557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080915050610c31565b60006002811115610aaa57fe5b821415610b9357606060016040519080825280601f01601f191660200182016040528015610ae75781602001600182028038833980820191505090505b50905060066001815460018160011615610100020316600290048110610b0957fe5b815460011615610b285790600052602060002090602091828204019190065b9054901a7f01000000000000000000000000000000000000000000000000000000000000000281600081518110610b5b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080915050610c31565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c295780601f10610bfe57610100808354040283529160200191610c29565b820191906000526020600020905b815481529060010190602001808311610c0c57829003601f168201915b505050505090505b919050565b60008060050160009054906101000a900460ff16905090565b60008060020154905090565b600060016003811115610c6a57fe5b600060050160009054906101000a900460ff166003811115610c8857fe5b1415610c9b576000600401549050610ca0565b600090505b90565b600060026003811115610cb257fe5b600060050160009054906101000a900460ff166003811115610cd057fe5b1415610ce3576000600401549050610d2d565b60016003811115610cf057fe5b600060050160009054906101000a900460ff166003811115610d0e57fe5b1415610d2857600060030154600060040154019050610d2d565b600090505b90565b6000808383905014610d4157600080fd5b600380811115610d4d57fe5b600060050160009054906101000a900460ff166003811115610d6b57fe5b14905092915050565b600060018383905014610def576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f696e76616c6964207175657279206c656e67746800000000000000000000000081525060200191505060405180910390fd5b82826000818110610dfc57fe5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660066000815460018160011615610100020316600290048110610e4757fe5b815460011615610e665790600052602060002090602091828204019190065b9054901a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614905092915050565b60026003811115610ec457fe5b600060050160009054906101000a900460ff166003811115610ee257fe5b1415610efe576000600401544311610ef957600080fd5b610f52565b60016003811115610f0b57fe5b600060050160009054906101000a900460ff166003811115610f2957fe5b1415610f4c57600060030154600060040154014311610f4757600080fd5b610f51565b610f5b565b5b610f5a611b2d565b5b565b610f656125fb565b610f6d61263d565b610f7683611c2e565b90506060610f8e600283611c5d90919063ffffffff16565b905080600281518110610f9d57fe5b6020026020010151604051908082528060200260200182016040528015610fd857816020015b6060815260200190600190039081610fc35790505b508360200181905250600081600281518110610ff057fe5b6020026020010181815250506000805b61100984611d02565b156110cb5761101784611d17565b809250819350505060001561102b576110c6565b600182141561104a5761103d84611d4b565b85600001819052506110c5565b60028214156110b05761105c84611d4b565b85602001518460028151811061106e57fe5b60200260200101518151811061108057fe5b60200260200101819052508260028151811061109857fe5b602002602001018051809190600101815250506110c4565b6110c38185611e0490919063ffffffff16565b5b5b5b611000565b50505050919050565b60008060010180549050825114611153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f696e76616c6964206e756d626572206f66207369676e6174757265730000000081525060200191505060405180910390fd5b606061116184846000611e94565b905060008090505b6000600101805490508110156112115781818151811061118557fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16600060010182815481106111b357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461120457600092505050611218565b8080600101915050611169565b5060019150505b92915050565b611226612615565b61122e61263d565b61123783611c2e565b90506000805b61124683611d02565b156113045761125483611d17565b8092508193505050600015611268576112ff565b60018214156112885761127a836120ab565b8460000181815250506112fe565b60028214156112a85761129a836120ab565b8460200181815250506112fd565b60038214156112c7576112ba83611d4b565b84604001819052506112fc565b60048214156112e7576112d9836120ab565b8460600181815250506112fb565b6112fa8184611e0490919063ffffffff16565b5b5b5b5b5b61123d565b505050919050565b600060e3825114611385576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f696e76616c6964207374617465206c656e67746800000000000000000000000081525060200191505060405180910390fd5b60008260008151811061139457fe5b602001015160f81c60f81b60f81c60ff16146113d2576113cd826000815181106113ba57fe5b602001015160f81c60f81b60f81c612131565b6114dd565b60008090506000600290505b60e38110156114215760008482815181106113f557fe5b602001015160f81c60f81b60f81c60ff16146114145781806001019250505b80806001019150506113de565b5080600760006101000a81548161ffff021916908361ffff160217905550600760049054906101000a900460ff1660ff16600760009054906101000a900461ffff1661ffff1610156114db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6e6f7420656e6f756768206f66666368616e2073746f6e65730000000000000081525060200191505060405180910390fd5b505b81600690805190602001906114f3929190612657565b5060019050919050565b6000806006600181546001816001161561010002031660029004811061151f57fe5b81546001161561153e5790600052602060002090602091828204019190065b9054901a7f01000000000000000000000000000000000000000000000000000000000000000260f81c905060006001016001820360ff168154811061157f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461164a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f7420796f7572207475726e0000000000000000000000000000000000000081525060200191505060405180910390fd5b60028351146116c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f696e76616c696420616374696f6e206c656e677468000000000000000000000081525060200191505060405180910390fd5b6000836000815181106116d057fe5b602001015160f81c60f81b60f81c90506000846001815181106116ef57fe5b602001015160f81c60f81b60f81c90506117098282612204565b61177b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6f7574206f6620626f756e64617279000000000000000000000000000000000081525060200191505060405180910390fd5b6000611787838361222a565b905060006006828154600181600116156101000203166002900481106117a957fe5b8154600116156117c85790600052602060002090602091828204019190065b9054901a7f01000000000000000000000000000000000000000000000000000000000000000260f81c60ff1614611867576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f736c6f74206973206f636375706965640000000000000000000000000000000081525060200191505060405180910390fd5b8360f81b60068281546001816001161561010002031660029004811061188957fe5b8154600116156118a85790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055506007600081819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff160217905550506007600281819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff16021790555050606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119e25780601f106119b7576101008083540402835291602001916119e2565b820191906000526020600020905b8154815290600101906020018083116119c557829003601f168201915b505050505090506119f881858560016000612240565b80611a0e5750611a0d81858560006001612240565b5b80611a235750611a22818585600180612240565b5b80611a585750611a5781858560017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612240565b5b15611a7457611a6685612131565b600195505050505050611b28565b60e1600760009054906101000a900461ffff1661ffff161480611abc5750600760059054906101000a900460ff1660ff16600760029054906101000a900461ffff1661ffff16115b15611af7576003600060050160006101000a81548160ff02191690836003811115611ae357fe5b0217905550611af260006122d4565b611b1e565b60018560ff161415611b1257611b0d60026122d4565b611b1d565b611b1c60016122d4565b5b5b6001955050505050505b919050565b600160066001815460018160011615610100020316600290048110611b4e57fe5b815460011615611b6d5790600052602060002090602091828204019190065b9054901a7f01000000000000000000000000000000000000000000000000000000000000000260f81c60ff161415611bae57611ba96002612131565b611c2c565b600260066001815460018160011615610100020316600290048110611bcf57fe5b815460011615611bee5790600052602060002090602091828204019190065b9054901a7f01000000000000000000000000000000000000000000000000000000000000000260f81c60ff161415611c2b57611c2a6001612131565b5b5b565b611c3661263d565b6001825111611c4457600080fd5b8181602001819052506000816000018181525050919050565b606060008360000151905060018301604051908082528060200260200182016040528015611c9a5781602001602082028038833980820191505090505b5091506000805b611caa86611d02565b15611cef57611cb886611d17565b80925081935050506001848381518110611cce57fe5b602002602001018181510191508181525050611cea8682611e04565b611ca1565b8286600001818152505050505092915050565b60008160200151518260000151109050919050565b6000806000611d25846120ab565b905060088181611d3157fe5b049250600781166005811115611d4357fe5b915050915091565b60606000611d58836120ab565b90506000818460000151019050836020015151811115611d7757600080fd5b816040519080825280601f01601f191660200182016040528015611daa5781602001600182028038833980820191505090505b50925060608460200151905060008086600001519050602086019150806020840101905060008090505b85811015611def578082015181840152602081019050611dd4565b50838760000181815250505050505050919050565b60006005811115611e1157fe5b816005811115611e1d57fe5b1415611e3257611e2c826120ab565b50611e90565b60026005811115611e3f57fe5b816005811115611e4b57fe5b1415611e8a576000611e5c836120ab565b90508083600001818151019150818152505082602001515183600001511115611e8457600080fd5b50611e8f565b600080fd5b5b5050565b6060808351604051908082528060200260200182016040528015611ec75781602001602082028038833980820191505090505b5090506000611f46866040516020018082805190602001908083835b60208310611f065780518252602082019150602081019050602083039250611ee3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120612351565b9050600080905060008090505b865181101561209d57611f7983888381518110611f6c57fe5b60200260200101516123a9565b848281518110611f8557fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508515612090578173ffffffffffffffffffffffffffffffffffffffff16848281518110611fe857fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1611612079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7369676e657273206e6f7420696e20617363656e64696e67206f72646572000081525060200191505060405180910390fd5b83818151811061208557fe5b602002602001015191505b8080600101915050611f53565b508293505050509392505050565b60008060608360200151905083600001519250826020820101519150600080935060008090505b600a8110156121265783811a915060078102607f8316901b85179450600060808316141561211957600181018660000181815101915081815250508494505050505061212c565b80806001019150506120d2565b50600080fd5b919050565b8060ff16600011158015612149575060028160ff1611155b6121bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f696e76616c69642077696e6e657220737461746500000000000000000000000081525060200191505060405180910390fd5b6121c481612489565b60008160ff1614612201576121d960006122d4565b6003600060050160006101000a81548160ff021916908360038111156121fb57fe5b02179055505b50565b6000600f60ff168360ff161080156122225750600f60ff168260ff16105b905092915050565b60008183600f026002010160ff16905092915050565b600080600090506122548787878787612506565b8101905060016122ab888888887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02612506565b038101905060058160ff16106122c55760019150506122cb565b60009150505b95945050505050565b8060f81b600660018154600181600116156101000203166002900481106122f757fe5b8154600116156123165790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f01000000000000000000000000000000000000000000000000000000000000008404021790555050565b60008160405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c01828152602001915050604051602081830303815290604052805190602001209050919050565b600060418251146123bd5760009050612483565b60008060006020850151925060408501519150606085015160001a9050601b8160ff1610156123ed57601b810190505b601b8160ff16141580156124055750601c8160ff1614155b156124165760009350505050612483565b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612473573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b8060f81b600660008154600181600116156101000203166002900481106124ac57fe5b8154600116156124cb5790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f01000000000000000000000000000000000000000000000000000000000000008404021790555050565b600080600190505b60058160ff16116125f05760008160ff1685028760000b01905060008260ff1685028760000b0190506125418282612204565b80156125ce575088612553898961222a565b8151811061255d57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191689612595848461222a565b8151811061259f57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156125de576001830192506125e9565b8293505050506125f2565b505061250e565b505b95945050505050565b604051806040016040528060608152602001606081525090565b6040518060800160405280600081526020016000815260200160608152602001600081525090565b604051806040016040528060008152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061269857805160ff19168380011785556126c6565b828001600101855582156126c6579182015b828111156126c55782518255916020019190600101906126aa565b5b5090506126d391906126d7565b5090565b6126f991905b808211156126f55760008160009055506001016126dd565b5090565b9056fea165627a7a72305820aaa12a12c93b8d7f75a2b2913278b65669b9b58863be8db8d9da260350e0369f0029"

// DeploySingleGomoku deploys a new Ethereum contract, binding an instance of SingleGomoku to it.
func DeploySingleGomoku(auth *bind.TransactOpts, backend bind.ContractBackend, _players []common.Address, _nonce *big.Int, _timeout *big.Int, _minStoneOffchain uint8, _maxStoneOnchain uint8) (common.Address, *types.Transaction, *SingleGomoku, error) {
	parsed, err := abi.JSON(strings.NewReader(SingleGomokuABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(SingleGomokuBin), backend, _players, _nonce, _timeout, _minStoneOffchain, _maxStoneOnchain)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SingleGomoku{SingleGomokuCaller: SingleGomokuCaller{contract: contract}, SingleGomokuTransactor: SingleGomokuTransactor{contract: contract}, SingleGomokuFilterer: SingleGomokuFilterer{contract: contract}}, nil
}

// SingleGomoku is an auto generated Go binding around an Ethereum contract.
type SingleGomoku struct {
	SingleGomokuCaller     // Read-only binding to the contract
	SingleGomokuTransactor // Write-only binding to the contract
	SingleGomokuFilterer   // Log filterer for contract events
}

// SingleGomokuCaller is an auto generated read-only Go binding around an Ethereum contract.
type SingleGomokuCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SingleGomokuTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SingleGomokuTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SingleGomokuFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SingleGomokuFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SingleGomokuSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SingleGomokuSession struct {
	Contract     *SingleGomoku     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// SingleGomokuCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SingleGomokuCallerSession struct {
	Contract *SingleGomokuCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// SingleGomokuTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SingleGomokuTransactorSession struct {
	Contract     *SingleGomokuTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// SingleGomokuRaw is an auto generated low-level Go binding around an Ethereum contract.
type SingleGomokuRaw struct {
	Contract *SingleGomoku // Generic contract binding to access the raw methods on
}

// SingleGomokuCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SingleGomokuCallerRaw struct {
	Contract *SingleGomokuCaller // Generic read-only contract binding to access the raw methods on
}

// SingleGomokuTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SingleGomokuTransactorRaw struct {
	Contract *SingleGomokuTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSingleGomoku creates a new instance of SingleGomoku, bound to a specific deployed contract.
func NewSingleGomoku(address common.Address, backend bind.ContractBackend) (*SingleGomoku, error) {
	contract, err := bindSingleGomoku(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SingleGomoku{SingleGomokuCaller: SingleGomokuCaller{contract: contract}, SingleGomokuTransactor: SingleGomokuTransactor{contract: contract}, SingleGomokuFilterer: SingleGomokuFilterer{contract: contract}}, nil
}

// NewSingleGomokuCaller creates a new read-only instance of SingleGomoku, bound to a specific deployed contract.
func NewSingleGomokuCaller(address common.Address, caller bind.ContractCaller) (*SingleGomokuCaller, error) {
	contract, err := bindSingleGomoku(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SingleGomokuCaller{contract: contract}, nil
}

// NewSingleGomokuTransactor creates a new write-only instance of SingleGomoku, bound to a specific deployed contract.
func NewSingleGomokuTransactor(address common.Address, transactor bind.ContractTransactor) (*SingleGomokuTransactor, error) {
	contract, err := bindSingleGomoku(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SingleGomokuTransactor{contract: contract}, nil
}

// NewSingleGomokuFilterer creates a new log filterer instance of SingleGomoku, bound to a specific deployed contract.
func NewSingleGomokuFilterer(address common.Address, filterer bind.ContractFilterer) (*SingleGomokuFilterer, error) {
	contract, err := bindSingleGomoku(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SingleGomokuFilterer{contract: contract}, nil
}

// bindSingleGomoku binds a generic wrapper to an already deployed contract.
func bindSingleGomoku(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(SingleGomokuABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SingleGomoku *SingleGomokuRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SingleGomoku.Contract.SingleGomokuCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SingleGomoku *SingleGomokuRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SingleGomoku.Contract.SingleGomokuTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SingleGomoku *SingleGomokuRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SingleGomoku.Contract.SingleGomokuTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SingleGomoku *SingleGomokuCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _SingleGomoku.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SingleGomoku *SingleGomokuTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SingleGomoku.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SingleGomoku *SingleGomokuTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SingleGomoku.Contract.contract.Transact(opts, method, params...)
}

// GetActionDeadline is a free data retrieval call binding the contract method 0xbbc35280.
//
// Solidity: function getActionDeadline() view returns(uint256)
func (_SingleGomoku *SingleGomokuCaller) GetActionDeadline(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SingleGomoku.contract.Call(opts, out, "getActionDeadline")
	return *ret0, err
}

// GetActionDeadline is a free data retrieval call binding the contract method 0xbbc35280.
//
// Solidity: function getActionDeadline() view returns(uint256)
func (_SingleGomoku *SingleGomokuSession) GetActionDeadline() (*big.Int, error) {
	return _SingleGomoku.Contract.GetActionDeadline(&_SingleGomoku.CallOpts)
}

// GetActionDeadline is a free data retrieval call binding the contract method 0xbbc35280.
//
// Solidity: function getActionDeadline() view returns(uint256)
func (_SingleGomoku *SingleGomokuCallerSession) GetActionDeadline() (*big.Int, error) {
	return _SingleGomoku.Contract.GetActionDeadline(&_SingleGomoku.CallOpts)
}

// GetOutcome is a free data retrieval call binding the contract method 0xea4ba8eb.
//
// Solidity: function getOutcome(bytes _query) view returns(bool)
func (_SingleGomoku *SingleGomokuCaller) GetOutcome(opts *bind.CallOpts, _query []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _SingleGomoku.contract.Call(opts, out, "getOutcome", _query)
	return *ret0, err
}

// GetOutcome is a free data retrieval call binding the contract method 0xea4ba8eb.
//
// Solidity: function getOutcome(bytes _query) view returns(bool)
func (_SingleGomoku *SingleGomokuSession) GetOutcome(_query []byte) (bool, error) {
	return _SingleGomoku.Contract.GetOutcome(&_SingleGomoku.CallOpts, _query)
}

// GetOutcome is a free data retrieval call binding the contract method 0xea4ba8eb.
//
// Solidity: function getOutcome(bytes _query) view returns(bool)
func (_SingleGomoku *SingleGomokuCallerSession) GetOutcome(_query []byte) (bool, error) {
	return _SingleGomoku.Contract.GetOutcome(&_SingleGomoku.CallOpts, _query)
}

// GetSeqNum is a free data retrieval call binding the contract method 0x6d15c457.
//
// Solidity: function getSeqNum() view returns(uint256)
func (_SingleGomoku *SingleGomokuCaller) GetSeqNum(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SingleGomoku.contract.Call(opts, out, "getSeqNum")
	return *ret0, err
}

// GetSeqNum is a free data retrieval call binding the contract method 0x6d15c457.
//
// Solidity: function getSeqNum() view returns(uint256)
func (_SingleGomoku *SingleGomokuSession) GetSeqNum() (*big.Int, error) {
	return _SingleGomoku.Contract.GetSeqNum(&_SingleGomoku.CallOpts)
}

// GetSeqNum is a free data retrieval call binding the contract method 0x6d15c457.
//
// Solidity: function getSeqNum() view returns(uint256)
func (_SingleGomoku *SingleGomokuCallerSession) GetSeqNum() (*big.Int, error) {
	return _SingleGomoku.Contract.GetSeqNum(&_SingleGomoku.CallOpts)
}

// GetSettleFinalizedTime is a free data retrieval call binding the contract method 0xb71ca01f.
//
// Solidity: function getSettleFinalizedTime() view returns(uint256)
func (_SingleGomoku *SingleGomokuCaller) GetSettleFinalizedTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _SingleGomoku.contract.Call(opts, out, "getSettleFinalizedTime")
	return *ret0, err
}

// GetSettleFinalizedTime is a free data retrieval call binding the contract method 0xb71ca01f.
//
// Solidity: function getSettleFinalizedTime() view returns(uint256)
func (_SingleGomoku *SingleGomokuSession) GetSettleFinalizedTime() (*big.Int, error) {
	return _SingleGomoku.Contract.GetSettleFinalizedTime(&_SingleGomoku.CallOpts)
}

// GetSettleFinalizedTime is a free data retrieval call binding the contract method 0xb71ca01f.
//
// Solidity: function getSettleFinalizedTime() view returns(uint256)
func (_SingleGomoku *SingleGomokuCallerSession) GetSettleFinalizedTime() (*big.Int, error) {
	return _SingleGomoku.Contract.GetSettleFinalizedTime(&_SingleGomoku.CallOpts)
}

// GetState is a free data retrieval call binding the contract method 0x44c9af28.
//
// Solidity: function getState(uint256 _key) view returns(bytes)
func (_SingleGomoku *SingleGomokuCaller) GetState(opts *bind.CallOpts, _key *big.Int) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _SingleGomoku.contract.Call(opts, out, "getState", _key)
	return *ret0, err
}

// GetState is a free data retrieval call binding the contract method 0x44c9af28.
//
// Solidity: function getState(uint256 _key) view returns(bytes)
func (_SingleGomoku *SingleGomokuSession) GetState(_key *big.Int) ([]byte, error) {
	return _SingleGomoku.Contract.GetState(&_SingleGomoku.CallOpts, _key)
}

// GetState is a free data retrieval call binding the contract method 0x44c9af28.
//
// Solidity: function getState(uint256 _key) view returns(bytes)
func (_SingleGomoku *SingleGomokuCallerSession) GetState(_key *big.Int) ([]byte, error) {
	return _SingleGomoku.Contract.GetState(&_SingleGomoku.CallOpts, _key)
}

// GetStatus is a free data retrieval call binding the contract method 0x4e69d560.
//
// Solidity: function getStatus() view returns(uint8)
func (_SingleGomoku *SingleGomokuCaller) GetStatus(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _SingleGomoku.contract.Call(opts, out, "getStatus")
	return *ret0, err
}

// GetStatus is a free data retrieval call binding the contract method 0x4e69d560.
//
// Solidity: function getStatus() view returns(uint8)
func (_SingleGomoku *SingleGomokuSession) GetStatus() (uint8, error) {
	return _SingleGomoku.Contract.GetStatus(&_SingleGomoku.CallOpts)
}

// GetStatus is a free data retrieval call binding the contract method 0x4e69d560.
//
// Solidity: function getStatus() view returns(uint8)
func (_SingleGomoku *SingleGomokuCallerSession) GetStatus() (uint8, error) {
	return _SingleGomoku.Contract.GetStatus(&_SingleGomoku.CallOpts)
}

// IsFinalized is a free data retrieval call binding the contract method 0xbcdbda94.
//
// Solidity: function isFinalized(bytes _query) view returns(bool)
func (_SingleGomoku *SingleGomokuCaller) IsFinalized(opts *bind.CallOpts, _query []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _SingleGomoku.contract.Call(opts, out, "isFinalized", _query)
	return *ret0, err
}

// IsFinalized is a free data retrieval call binding the contract method 0xbcdbda94.
//
// Solidity: function isFinalized(bytes _query) view returns(bool)
func (_SingleGomoku *SingleGomokuSession) IsFinalized(_query []byte) (bool, error) {
	return _SingleGomoku.Contract.IsFinalized(&_SingleGomoku.CallOpts, _query)
}

// IsFinalized is a free data retrieval call binding the contract method 0xbcdbda94.
//
// Solidity: function isFinalized(bytes _query) view returns(bool)
func (_SingleGomoku *SingleGomokuCallerSession) IsFinalized(_query []byte) (bool, error) {
	return _SingleGomoku.Contract.IsFinalized(&_SingleGomoku.CallOpts, _query)
}

// ApplyAction is a paid mutator transaction binding the contract method 0x1f2b71e5.
//
// Solidity: function applyAction(bytes _action) returns()
func (_SingleGomoku *SingleGomokuTransactor) ApplyAction(opts *bind.TransactOpts, _action []byte) (*types.Transaction, error) {
	return _SingleGomoku.contract.Transact(opts, "applyAction", _action)
}

// ApplyAction is a paid mutator transaction binding the contract method 0x1f2b71e5.
//
// Solidity: function applyAction(bytes _action) returns()
func (_SingleGomoku *SingleGomokuSession) ApplyAction(_action []byte) (*types.Transaction, error) {
	return _SingleGomoku.Contract.ApplyAction(&_SingleGomoku.TransactOpts, _action)
}

// ApplyAction is a paid mutator transaction binding the contract method 0x1f2b71e5.
//
// Solidity: function applyAction(bytes _action) returns()
func (_SingleGomoku *SingleGomokuTransactorSession) ApplyAction(_action []byte) (*types.Transaction, error) {
	return _SingleGomoku.Contract.ApplyAction(&_SingleGomoku.TransactOpts, _action)
}

// FinalizeOnActionTimeout is a paid mutator transaction binding the contract method 0xfa5e7ff5.
//
// Solidity: function finalizeOnActionTimeout() returns()
func (_SingleGomoku *SingleGomokuTransactor) FinalizeOnActionTimeout(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SingleGomoku.contract.Transact(opts, "finalizeOnActionTimeout")
}

// FinalizeOnActionTimeout is a paid mutator transaction binding the contract method 0xfa5e7ff5.
//
// Solidity: function finalizeOnActionTimeout() returns()
func (_SingleGomoku *SingleGomokuSession) FinalizeOnActionTimeout() (*types.Transaction, error) {
	return _SingleGomoku.Contract.FinalizeOnActionTimeout(&_SingleGomoku.TransactOpts)
}

// FinalizeOnActionTimeout is a paid mutator transaction binding the contract method 0xfa5e7ff5.
//
// Solidity: function finalizeOnActionTimeout() returns()
func (_SingleGomoku *SingleGomokuTransactorSession) FinalizeOnActionTimeout() (*types.Transaction, error) {
	return _SingleGomoku.Contract.FinalizeOnActionTimeout(&_SingleGomoku.TransactOpts)
}

// IntendSettle is a paid mutator transaction binding the contract method 0x130d33fe.
//
// Solidity: function intendSettle(bytes _stateProof) returns()
func (_SingleGomoku *SingleGomokuTransactor) IntendSettle(opts *bind.TransactOpts, _stateProof []byte) (*types.Transaction, error) {
	return _SingleGomoku.contract.Transact(opts, "intendSettle", _stateProof)
}

// IntendSettle is a paid mutator transaction binding the contract method 0x130d33fe.
//
// Solidity: function intendSettle(bytes _stateProof) returns()
func (_SingleGomoku *SingleGomokuSession) IntendSettle(_stateProof []byte) (*types.Transaction, error) {
	return _SingleGomoku.Contract.IntendSettle(&_SingleGomoku.TransactOpts, _stateProof)
}

// IntendSettle is a paid mutator transaction binding the contract method 0x130d33fe.
//
// Solidity: function intendSettle(bytes _stateProof) returns()
func (_SingleGomoku *SingleGomokuTransactorSession) IntendSettle(_stateProof []byte) (*types.Transaction, error) {
	return _SingleGomoku.Contract.IntendSettle(&_SingleGomoku.TransactOpts, _stateProof)
}

// SingleGomokuIntendSettleIterator is returned from FilterIntendSettle and is used to iterate over the raw logs and unpacked data for IntendSettle events raised by the SingleGomoku contract.
type SingleGomokuIntendSettleIterator struct {
	Event *SingleGomokuIntendSettle // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SingleGomokuIntendSettleIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SingleGomokuIntendSettle)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SingleGomokuIntendSettle)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SingleGomokuIntendSettleIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SingleGomokuIntendSettleIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SingleGomokuIntendSettle represents a IntendSettle event raised by the SingleGomoku contract.
type SingleGomokuIntendSettle struct {
	Seq *big.Int
	Raw types.Log // Blockchain specific contextual infos
}

// FilterIntendSettle is a free log retrieval operation binding the contract event 0xce68db27527c6058059e8cbd1c6de0528ef1c417fe1c21c545919c7da3466d2a.
//
// Solidity: event IntendSettle(uint256 seq)
func (_SingleGomoku *SingleGomokuFilterer) FilterIntendSettle(opts *bind.FilterOpts) (*SingleGomokuIntendSettleIterator, error) {

	logs, sub, err := _SingleGomoku.contract.FilterLogs(opts, "IntendSettle")
	if err != nil {
		return nil, err
	}
	return &SingleGomokuIntendSettleIterator{contract: _SingleGomoku.contract, event: "IntendSettle", logs: logs, sub: sub}, nil
}

// WatchIntendSettle is a free log subscription operation binding the contract event 0xce68db27527c6058059e8cbd1c6de0528ef1c417fe1c21c545919c7da3466d2a.
//
// Solidity: event IntendSettle(uint256 seq)
func (_SingleGomoku *SingleGomokuFilterer) WatchIntendSettle(opts *bind.WatchOpts, sink chan<- *SingleGomokuIntendSettle) (event.Subscription, error) {

	logs, sub, err := _SingleGomoku.contract.WatchLogs(opts, "IntendSettle")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SingleGomokuIntendSettle)
				if err := _SingleGomoku.contract.UnpackLog(event, "IntendSettle", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseIntendSettle is a log parse operation binding the contract event 0xce68db27527c6058059e8cbd1c6de0528ef1c417fe1c21c545919c7da3466d2a.
//
// Solidity: event IntendSettle(uint256 seq)
func (_SingleGomoku *SingleGomokuFilterer) ParseIntendSettle(log types.Log) (*SingleGomokuIntendSettle, error) {
	event := new(SingleGomokuIntendSettle)
	if err := _SingleGomoku.contract.UnpackLog(event, "IntendSettle", log); err != nil {
		return nil, err
	}
	return event, nil
}
